{"version":3,"sources":["components/Navigation/Navigation.js","components/Rules/RulesData.js","components/Rules/RulesContainer.js","components/Players/Player/Player.js","components/Players/PlayerContainer.js","components/Players/CreatePlayer/CreatePlayerRace/CreatePlayerRace.js","components/Players/CreatePlayer/CreatePlayer.js","components/Score/ScorePlayer/ScorePlayer.js","components/Score/ScoreContainer.js","components/Round/RoundContainer.js","components/Agenda/AgendaContainer.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Navigation","viewContainer","document","getElementById","navUl","querySelector","navButtons","querySelectorAll","addEventListener","e","button","target","closest","classList","forEach","className","endsWith","remove","add","react_default","a","createElement","id","xmlns","xlinkHref","version","width","height","viewBox","d","Component","rules","title","content","RulesContainer","ruleToggle","nextSibling","constants","map","rule","key","dangerouslySetInnerHTML","__html","Player","props","shortName","race","replace","toLowerCase","concat","color","src","alt","name","onClick","removePlayer","fill","PlayerContainer","_this","this","players","player","index","Players_Player_Player","score","handleModal","CreatePlayerRace","type","value","datarace","disabled","pickedRace","htmlFor","CreatePlayer","state","createPlayerRace","createPlayerColor","createPlayerName","handleRaceChange","setState","getAttribute","handleColorChange","handleNameChange","handleSubmit","preventDefault","addPlayer","races","colors","pickedColor","reset","onSubmit","onChange","CreatePlayer_CreatePlayerRace_CreatePlayerRace","picked","datacolor","clipPath","transform","placeholder","ScorePlayer","changeScore","ScoreContainer","Score_ScorePlayer_ScorePlayer","RoundContainer","strategies","strategy","class","AgendaContainer","createId","Math","random","toString","slice","Race","portrait","thumbnail","Object","classCallCheck","App","possibleConstructorReturn","getPrototypeOf","call","handleAddPlayer","raceId","colorId","toConsumableArray","handleRemovePlayer","find","c","prevState","objectSpread","filter","p","handleScoreChange","delta","handlePickedRace","handlePickedColor","handleShowModal","modal","console","log","modalContainer","selectedModal","modals","primary","secondary","tip","_this2","components_Navigation_Navigation","Players_PlayerContainer","Score_ScoreContainer","Round_RoundContainer","Agenda_AgendaContainer","Rules_RulesContainer","Players_CreatePlayer_CreatePlayer","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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O,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,6BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,uBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,qBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,iBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,cACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,wBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,+BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,UACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,QACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,WACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,4BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,cACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,iBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,aACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,aACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,aACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,eACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,2BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,kBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,WACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,6BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,cACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,WACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,SACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,kBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,WACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,iCACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,UACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,2BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,kBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,4BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,UACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,iBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,UACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,QACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,8BACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,eACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,aACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,UACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,eACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,mBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gBACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,aACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,YACPC,QAAS,IACX,CACEX,GAAI,GACJU,MAAO,gCACPC,QAAS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","file":"static/js/main.2ca68c47.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { NavLink } from 'react-router-dom';\n\nclass Navigation extends Component {\n\n    componentDidMount() {\n        const viewContainer = document.getElementById('view-container');\n        const navUl = document.querySelector('nav ul');\n        const navButtons = document.querySelectorAll('nav button');\n\n        navUl.addEventListener('click', (e) => {\n\n            // Filter click event to button\n            let button = e.target.closest('button');\n\n            // Remove any active view classes already in effect\n            viewContainer.classList.forEach(className => {\n                if (className.endsWith('--active')) {\n                  viewContainer.classList.remove(className);\n                }\n            });\n\n            // Add the active class for the new view\n            switch(button.className) {\n                case 'nav--players':\n                    viewContainer.classList.add('view__1--active');\n                    break;\n                case 'nav--score':\n                    viewContainer.classList.add('view__2--active');\n                    break;\n                case 'nav--round':\n                    viewContainer.classList.add('view__3--active');\n                    break;\n                case 'nav--agenda':\n                    viewContainer.classList.add('view__4--active');\n                    break;\n                case 'nav--rules':\n                    viewContainer.classList.add('view__5--active');\n                    break;\n                case 'nav--settings':\n                    viewContainer.classList.add('view__6--active');\n                    break;\n                default:\n                    break;\n            }\n\n            // Remove any active view class on nav buttons\n            navButtons.forEach(button => {\n                button.classList.remove('active');\n            });\n\n            // Add active class to nav button\n            button.classList.add('active')\n            \n\n        });\n\n        \n    }\n\n\trender() {\n\t\treturn ( \n            <nav id=\"nav\">\n                <ul>\n                    <li>\n                        <button className=\"nav--players active\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12,6A3,3 0 0,0 9,9A3,3 0 0,0 12,12A3,3 0 0,0 15,9A3,3 0 0,0 12,6M6,8.17A2.5,2.5 0 0,0 3.5,10.67A2.5,2.5 0 0,0 6,13.17C6.88,13.17 7.65,12.71 8.09,12.03C7.42,11.18 7,10.15 7,9C7,8.8 7,8.6 7.04,8.4C6.72,8.25 6.37,8.17 6,8.17M18,8.17C17.63,8.17 17.28,8.25 16.96,8.4C17,8.6 17,8.8 17,9C17,10.15 16.58,11.18 15.91,12.03C16.35,12.71 17.12,13.17 18,13.17A2.5,2.5 0 0,0 20.5,10.67A2.5,2.5 0 0,0 18,8.17M12,14C10,14 6,15 6,17V19H18V17C18,15 14,14 12,14M4.67,14.97C3,15.26 1,16.04 1,17.33V19H4V17C4,16.22 4.29,15.53 4.67,14.97M19.33,14.97C19.71,15.53 20,16.22 20,17V19H23V17.33C23,16.04 21,15.26 19.33,14.97Z\" /></svg>\n                            <p>Setup</p>\n                        </div></button>\n                    </li>\n                    <li>\n                        <button className=\"nav--score\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M20.2,4H20H17V2H7V4H4.5H3.8H2V11C2,12 3,13 4,13H7.2C7.6,14.9 8.6,16.6 11,16.9V19C8,19.2 8,20.3 8,21.6V22H16V21.7C16,20.4 16,19.3 13,19.1V17C15.5,16.7 16.5,15 16.8,13.1H20C21,13.1 22,12.1 22,11.1V4H20.2M4,11V6H7V8V11C5.6,11 4.4,11 4,11M20,11C19.6,11 18.4,11 17,11V6H18H20V11Z\" /></svg>\n                            <p>Score</p>\n                        </div></button>\n                    </li>\n                    <li>\n                        <button className=\"nav--round\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M21.47,4.35L20.13,3.79V12.82L22.56,6.96C22.97,5.94 22.5,4.77 21.47,4.35M1.97,8.05L6.93,20C7.24,20.77 7.97,21.24 8.74,21.26C9,21.26 9.27,21.21 9.53,21.1L16.9,18.05C17.65,17.74 18.11,17 18.13,16.26C18.14,16 18.09,15.71 18,15.45L13,3.5C12.71,2.73 11.97,2.26 11.19,2.25C10.93,2.25 10.67,2.31 10.42,2.4L3.06,5.45C2.04,5.87 1.55,7.04 1.97,8.05M18.12,4.25A2,2 0 0,0 16.12,2.25H14.67L18.12,10.59\" /></svg>\n                            <p>Round</p>\n                        </div></button>\n                    </li>\n                    <li>\n                        <button className=\"nav--agenda\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M18,13H17.32L15.32,15H17.23L19,17H5L6.78,15H8.83L6.83,13H6L3,16V20A2,2 0 0,0 5,22H19A2,2 0 0,0 21,20V16L18,13M17,7.95L12.05,12.9L8.5,9.36L13.46,4.41L17,7.95M12.76,2.29L6.39,8.66C6,9.05 6,9.68 6.39,10.07L11.34,15C11.73,15.41 12.36,15.41 12.75,15L19.11,8.66C19.5,8.27 19.5,7.64 19.11,7.25L14.16,2.3C13.78,1.9 13.15,1.9 12.76,2.29Z\" /></svg>\n                            <p>Agenda</p>\n                        </div></button>\n                    </li>\n                    <li>\n                        <button className=\"nav--rules\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M21,5C19.89,4.65 18.67,4.5 17.5,4.5C15.55,4.5 13.45,4.9 12,6C10.55,4.9 8.45,4.5 6.5,4.5C4.55,4.5 2.45,4.9 1,6V20.65C1,20.9 1.25,21.15 1.5,21.15C1.6,21.15 1.65,21.1 1.75,21.1C3.1,20.45 5.05,20 6.5,20C8.45,20 10.55,20.4 12,21.5C13.35,20.65 15.8,20 17.5,20C19.15,20 20.85,20.3 22.25,21.05C22.35,21.1 22.4,21.1 22.5,21.1C22.75,21.1 23,20.85 23,20.6V6C22.4,5.55 21.75,5.25 21,5M21,18.5C19.9,18.15 18.7,18 17.5,18C15.8,18 13.35,18.65 12,19.5V8C13.35,7.15 15.8,6.5 17.5,6.5C18.7,6.5 19.9,6.65 21,7V18.5Z\" /></svg>\n                            <p>Rules</p>\n                        </div></button>\n                    </li>\n                    {/* <li>\n                        <button className=\"nav--settings\"><div className=\"nav__label\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" xlinkHref=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z\" /></svg>\n                            <p>Settings</p>\n                        </div></button>\n                    </li> */}\n                </ul>\n            </nav>\n\t\t);\n\t}\n}\n\nexport default Navigation;","export const rules = [{\n    id: 1,\n    title: 'Abilities',\n    content: `<p>Cards and faction sheets each have abilities that players can resolve to trigger various game effects.</p><ul> <li> <span>1.1</span> <p>Each ability describes when and how a player can resolve it.</p></li><li> <span>1.2</span> <p>If a card has multiple abilities, each ability is presented as its own paragraph.</p></li><li> <span>1.3</span> <p>If an ability contains the word “Action,” a player must use a component action during the action phase to resolve that ability.</p></li><li> <span>1.4</span> <p>If an ability uses the word “cannot,” that effect is absolute.</p></li><li> <span>1.5</span> <p>When a player resolves an ability, he must resolve the ability in its entirety. Any parts of the ability preceded by the word “may” are optional, and the player resolving the ability may choose not to resolve those parts.</p></li><li> <span>1.6</span> <p>Abilities on components that remain in play are mandatory unless they use the word “may.”</p></li><li> <span>1.7</span> <p>If an ability has multiple effects separated by the word “and,” a player must resolve as many of the ability’s effects as possible. However, if he cannot resolve all of its effects, he is allowed to resolve as many as he can.</p></li></ul><div class=\"subheading\"> <span>1.8</span> <h3>Costs</h3></div><ul> <li> <span>1.9</span> <p>Some abilities have a cost that is followed by an effect. The cost of an ability is separated from the effect by the word “to” or by a semicolon. A player cannot resolve the effect of such an ability if he cannot resolve that ability’s cost.</p></li><li> <span>1.10</span> <p>Some examples of an ability’s cost include spending resources, spending trade goods, spending command tokens, exhausting cards, and activating specific systems.</p></li></ul><div class=\"subheading\"> <span>1.11</span> <h3>Timing</h3></div><ul> <li> <span>1.12</span> <p>If the timing of an ability uses the word “after,” the ability’s effect occurs immediately after the described timing event.</p><ul> <li><p>For example, if an ability is resolved “after a ship is destroyed,” the ability must be resolved as soon as the ship is destroyed and not later during that turn or round.</p></li></ul> </li><li> <span>1.13</span> <p>If the timing of an ability uses the word “when,” the ability’s effect occurs at the moment of the described timing event.</p><ul> <li><p>Such an ability typically modifies or replaces the timing event in some way.</p></li></ul> </li><li> <span>1.14</span> <p>Effects that occur “when” an event happens take priority over effects that occur “after” an event happens.</p></li><li> <span>1.15</span> <p>If an ability uses the word “then,” a player must resolve the effect that occurs before the word “then” before resolving the effect that occurs after the word “then.”</p></li><li> <span>1.16</span> <p>Each ability can be resolved once for each occurrence of that ability’s timing event. For example, if an ability is resolved “At the start of combat,” it can be resolved at the start of each combat.</p></li></ul><div class=\"subheading\"> <span>1.17</span> <h3>Component-specific Rules</h3></div><ul> <li> <span>1.18</span> <p>The opening paragraph of each ability found on an action card describes when a player can resolve that card’s ability.</p></li><li> <span>1.19</span> <p>The opening paragraph of most abilities found on promissory notes describes when a player can resolve that card’s ability.</p><ul> <li><p>Some promissory notes have abilities that trigger as soon as a player receives the card.</p></li></ul> </li><li> <span>1.20</span> <p>Abilities on agenda cards correspond to an outcome. Players resolve these abilities during the agenda phase after players vote for a particular outcome.</p></li><li> <span>1.21</span> <p>Each faction has faction abilities presented on its faction sheet. Each faction’s flagship has one or more unique abilities. Some abilities provide players with perpetual effects.</p></li><li> <span>1.22</span> <p>Some units have unit abilities. These abilities are named and presented above a unit’s attributes on a player’s faction sheet or on a unit upgrade card. Each unit ability has unique rules for when a player can resolve that ability. The following abilities are unit abilities:</p><ul> <li><p>Anti-Fighter Barrage</p></li><li><p>Bombardment</p></li><li><p>Planetary Shield</p></li><li><p>Production</p></li><li><p>Space Cannon</p></li><li><p>Sustain Damage</p></li></ul> </li><li> <span>1.23</span> <p>If a unit’s ability uses the phrase “this system” or “this planet,” the ability is referring to the system or planet that contains that unit.</p></li></ul>`\n},{\n    id: 2,\n    title: 'Action Cards',\n    content: `<p>Action cards provide players with various abilities that they can resolve as described on the cards.</p><ul> <li> <span>2.1</span> <p>Each player draws one action card during each status phase. </p></li><li> <span>2.2</span> <p>Players can draw action cards by resolving the primary and secondary abilities of the “Politics” strategy card. </p></li><li> <span>2.3</span> <p>When a player draws an action card, he takes the top card from the action card deck and adds it to his hand of action cards. </p></li><li> <span>2.4</span> <p>Each player can have a maximum of <b>seven action cards</b> in his hand at any time. If a player ever has more than seven action cards, he must choose which seven cards he wishes to keep and discard the rest. </p><ul> <li><p>A game effect can increase or decrease the number of cards a player can have in his hand.</p></li></ul> </li><li> <span>2.5</span> <p>A player’s action cards remain hidden from other players until they are played. </p></li><li> <span>2.6</span> <p>The first paragraph of each action card is presented in bold text and describes the timing of when that card’s ability can be resolved.</p><ul> <li><p>If an action card contains the word “Action,” a player must use a component action during the action phase to resolve the ability. A player cannot resolve a component action if he cannot completely resolve its ability. </p></li><li><p>Multiple action cards with the <b>same</b> name cannot be played during a single timing window to affect the same units or game mechanic. </p></li></ul> </li><li> <span>2.7</span> <p>To play an action card, a player reads and resolves the card’s ability text. Then, he discards the card, placing it in the action discard pile. </p></li><li> <span>2.8</span> <p>If an action card is canceled, that card has no effect and is discarded. </p></li><li> <span>2.9</span> <p>If there are multiple action cards that players wish to resolve at the same time <b>during the strategy or agenda phases</b>, players take turns resolving action cards starting with the speaker and proceeding clockwise. This process repeats until each player has resolved all the action cards that he wishes to resolve during that window. </p></li><li> <span>2.10</span> <p>If there are multiple action cards that players wish to resolve at the same time <b>during the action phase</b>, each player takes a turn resolving one action card in initiative order, beginning with the active player. This process repeats until each player has resolved all the action cards that he wishes to resolve during that window. </p></li></ul>`\n},{\n    id: 3,\n    title: 'Action Phase',\n    content: `<p>During the action phase, each player takes a turn in initiative order. During a player’s turn, he performs a single action. After each player has taken a turn, player turns begin again in initiative order. This process continues until all players have passed. </p><ul> <li> <span>3.1</span> <p>During a player’s turn, he may perform one of the following three types of actions: a strategic action, a tactical action, or a component action.</p></li><li> <span>3.2</span> <p>If a player cannot perform an action, he must pass.</p></li><li> <span>3.3</span> <p>After a player has passed, he cannot perform additional actions during that action phase.</p><ul> <li><p>A player that has passed can still resolve the secondary ability of other players’ strategy cards. </p></li></ul> </li><li> <span>3.4</span> <p>A player cannot pass until he has performed a strategic action.</p><ul> <li><p>During a three-player or four-player game, a player cannot pass until he has exhausted both of his strategy cards. </p></li></ul> </li><li> <span>3.5</span> <p>After all players have passed, play proceeds to the status phase.</p></li></ul>`\n},{\n    id: 4,\n    title: 'Active Player',\n    content: `<p>The active player is the player taking a turn during the action phase.</p><ul> <li> <span>4.1</span> <p>During the action phase, the player who is first in initiative order is the first active player. </p></li><li> <span>4.2</span> <p>After the active player takes a turn, the next player in initiative order becomes the active player. </p></li><li> <span>4.3</span> <p>After the last player in initiative order takes a turn, the player who is first in initiative order becomes the active player again, and turns begin again in initiative order, ignoring any players who have already passed. </p></li></ul>`\n},{\n    id: 5,\n    title: 'Active System',\n    content: ''\n},{\n    id: 6,\n    title: 'Adjacency',\n    content: ''\n},{\n    id: 7,\n    title: 'Agenda Card',\n    content: ''\n},{\n    id: 8,\n    title: 'Agenda Phase',\n    content: ''\n},{\n    id: 9,\n    title: 'Anomalies',\n    content: ''\n},{\n    id: 10,\n    title: 'Anti-fighter Barrage (Unit Ability)',\n    content: ''\n},{\n    id: 11,\n    title: 'Asteroid Field',\n    content: ''\n},{\n    id: 12,\n    title: 'Attach',\n    content: ''\n},{\n    id: 13,\n    title: 'Attacker',\n    content: ''\n},{\n    id: 14,\n    title: 'Blockaded',\n    content: ''\n},{\n    id: 15,\n    title: 'Bombardment (Unit Ability)',\n    content: ''\n},{\n    id: 16,\n    title: 'Capacity (Attribute)',\n    content: ''\n},{\n    id: 17,\n    title: 'Combat (Attribute)',\n    content: ''\n},{\n    id: 18,\n    title: 'Command Sheet',\n    content: ''\n},{\n    id: 19,\n    title: 'Command Tokens',\n    content: ''\n},{\n    id: 20,\n    title: 'Commodities',\n    content: ''\n},{\n    id: 21,\n    title: 'Component Action',\n    content: ''\n},{\n    id: 22,\n    title: 'Component Limitations',\n    content: ''\n},{\n    id: 23,\n    title: 'Construction (Strategy Card)',\n    content: ''\n},{\n    id: 24,\n    title: 'Control',\n    content: ''\n},{\n    id: 25,\n    title: 'Cost (Attribute)',\n    content: ''\n},{\n    id: 26,\n    title: 'Custodians Token',\n    content: ''\n},{\n    id: 27,\n    title: 'Deals',\n    content: ''\n},{\n    id: 28,\n    title: 'Defender',\n    content: ''\n},{\n    id: 29,\n    title: 'Destroyed',\n    content: ''\n},{\n    id: 30,\n    title: 'Diplomacy (Strategy Card)',\n    content: ''\n},{\n    id: 31,\n    title: 'Elimination',\n    content: ''\n},{\n    id: 32,\n    title: 'Exhausted',\n    content: ''\n},{\n    id: 33,\n    title: 'Fighter Tokens',\n    content: ''\n},{\n    id: 34,\n    title: 'Fleet Pool',\n    content: ''\n},{\n    id: 35,\n    title: 'Game Board',\n    content: ''\n},{\n    id: 36,\n    title: 'Game Round',\n    content: ''\n},{\n    id: 37,\n    title: 'Gravity Rift',\n    content: ''\n},{\n    id: 38,\n    title: 'Ground Combat',\n    content: ''\n},{\n    id: 39,\n    title: 'Ground Forces',\n    content: ''\n},{\n    id: 40,\n    title: 'Imperial (Strategy Card)',\n    content: ''\n},{\n    id: 41,\n    title: 'Infantry Tokens',\n    content: ''\n},{\n    id: 42,\n    title: 'Influence',\n    content: ''\n},{\n    id: 43,\n    title: 'Initiative Order',\n    content: ''\n},{\n    id: 44,\n    title: 'Invasion',\n    content: ''\n},{\n    id: 45,\n    title: 'Leadership (Strategy Card)',\n    content: ''\n},{\n    id: 46,\n    title: 'Mecatol Rex',\n    content: ''\n},{\n    id: 47,\n    title: 'Modifiers',\n    content: ''\n},{\n    id: 48,\n    title: 'Move (Attribute)',\n    content: ''\n},{\n    id: 49,\n    title: 'Movement',\n    content: ''\n},{\n    id: 50,\n    title: 'Nebula',\n    content: ''\n},{\n    id: 51,\n    title: 'Neighbors',\n    content: ''\n},{\n    id: 52,\n    title: 'Objective Cards',\n    content: ''\n},{\n    id: 53,\n    title: 'Opponent',\n    content: ''\n},{\n    id: 54,\n    title: 'PDS (Planetary Defense System)',\n    content: ''\n},{\n    id: 55,\n    title: 'Planets',\n    content: ''\n},{\n    id: 56,\n    title: 'Planetary Shield',\n    content: ''\n},{\n    id: 57,\n    title: 'Politics (Strategy Card)',\n    content: ''\n},{\n    id: 58,\n    title: 'Producing Units',\n    content: ''\n},{\n    id: 59,\n    title: 'Production (Unit Ability)',\n    content: ''\n},{\n    id: 60,\n    title: 'Promissory Notes',\n    content: ''\n},{\n    id: 61,\n    title: 'Readied',\n    content: ''\n},{\n    id: 62,\n    title: 'Reinforcements',\n    content: ''\n},{\n    id: 63,\n    title: 'Rerolls',\n    content: ''\n},{\n    id: 64,\n    title: 'Resources',\n    content: ''\n},{\n    id: 65,\n    title: 'Ships',\n    content: ''\n},{\n    id: 66,\n    title: 'Space Cannon (Unit Ability)',\n    content: ''\n},{\n    id: 67,\n    title: 'Space Combat',\n    content: ''\n},{\n    id: 68,\n    title: 'Space Dock',\n    content: ''\n},{\n    id: 69,\n    title: 'Speaker',\n    content: ''\n},{\n    id: 70,\n    title: 'Status Phase',\n    content: ''\n},{\n    id: 71,\n    title: 'Strategic Action',\n    content: ''\n},{\n    id: 72,\n    title: 'Strategy Card',\n    content: ''\n},{\n    id: 73,\n    title: 'Stategy Phase',\n    content: ''\n},{\n    id: 74,\n    title: 'Structures',\n    content: ''\n},{\n    id: 75,\n    title: 'Supernova',\n    content: ''\n},{\n    id: 76,\n    title: 'Sustain Damage (Unit Ability)',\n    content: ''\n},{\n    id: 77,\n    title: 'System Tiles',\n    content: ''\n},{\n    id: 78,\n    title: 'Tactical Action',\n    content: ''\n},{\n    id: 79,\n    title: 'Technology',\n    content: ''\n},{\n    id: 80,\n    title: 'Technology (Strategy Card)',\n    content: ''\n},{\n    id: 81,\n    title: 'Trade (Strategy Card)',\n    content: ''\n},{\n    id: 82,\n    title: 'Trade Goods',\n    content: ''\n},{\n    id: 83,\n    title: 'Transactions',\n    content: ''\n},{\n    id: 84,\n    title: 'Transport',\n    content: ''\n},{\n    id: 85,\n    title: 'Units',\n    content: ''\n},{\n    id: 86,\n    title: 'Unit Upgrades',\n    content: ''\n},{\n    id: 87,\n    title: 'Victory Points',\n    content: ''\n},{\n    id: 88,\n    title: 'Warfare (Strategy Card)',\n    content: ''\n},{\n    id: 89,\n    title: 'Wormholes',\n    content: ''\n}]\n\n","import React, { Component } from 'react';\nimport * as constants from '../Rules/RulesData';\n\nclass RulesContainer extends Component {\n\n\tcomponentDidMount() {\n\t\tconst ruleToggles = document.querySelectorAll('.rule__heading');\n\t\truleToggles.forEach( (ruleToggle) => {\n\t\t\truleToggle.addEventListener('click', (e) => {\n\t\t\t\tconst toggle = e.target.closest('.rule__heading');\n\t\t\t\tconst content = toggle.nextSibling;\n\t\t\t\tcontent.classList.add('rule__content--open');\n\t\t\t});\n\t\t})\n\t}\n\n\trender() {\n\t\treturn ( \n            <div className=\"rules__list\">\n                {constants.rules.map( (rule) => (\n\t\t\t\t\t<div className=\"rule\" key={rule.id}>\n\t\t\t\t\t\t<div className=\"rule__heading\">\n\t\t\t\t\t\t\t<span>{rule.id}</span>\n\t\t\t\t\t\t\t<h2>{rule.title}</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"rule__content\" dangerouslySetInnerHTML={{__html: rule.content}}></div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n            </div>\n\t\t);\n\t}\n}\n\nexport default RulesContainer;","import React from 'react';\n\nconst Player = (props) => {\n\n    let shortName = props.race.replace(/\\s+/g, '').toLowerCase();\n\n    return (\n        <div className={`player player--${ props.color }`}>\n            <div className=\"player__image\">\n               <img src={\"/images/races-thumb/\" + shortName + \".jpg\"} alt={ props.race }/>\n            </div>\n            <div className=\"player__content\">\n                <div className=\"player__info\">\n                    <h2>{ props.name }</h2>\n                    <p>{ props.race }</p>\n                </div>\n                <button onClick={ () => props.removePlayer(props.id) }><svg xlinkHref=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg></button>\n            </div>  \n        </div>\n    );\n    \n}\n\nexport default Player;","import React, { Component } from 'react';\n// import CreatePlayer from './CreatePlayer/CreatePlayer';\nimport Player from './Player/Player';\n\nclass PlayerContainer extends Component {\n\n\trender() {\n\t\treturn ( \n            <div className=\"players\">\n                <div className=\"players__list flex-row\">\n                    {this.props.players.map( (player, index) => (\n                        <Player\n                            key={player.id}\n                            id={player.id}\n                            name={player.name}\n                            race={player.race}\n                            color={player.color}\n                            score={player.score}\n                            index={index}\n                            removePlayer={this.props.removePlayer} \n                        />\n                    ))}\n                </div>\n                <button className=\"button-lg primary-button\" onClick={ () => this.props.handleModal('create-player', true) }>Add player</button>\n            </div>\n\t\t);\n\t}\n}\n\nexport default PlayerContainer;","import React from 'react';\n\nconst CreatePlayerRace = (props) => {\n\n    let shortName = props.name.replace(/\\s+/g, '').toLowerCase();\n\n    return (\n        <div className=\"form__field-option\">\n            <input type=\"radio\" id={\"create-player-race-\" + props.id} name=\"create-player-race\" value={ props.name } datarace={props.id} disabled={props.pickedRace}/>\n            <label htmlFor={\"create-player-race-\" + props.id}>\n                <img src={\"/images/races-thumb/\" + shortName + \".jpg\"} alt={ props.name }/>\n            </label>\n        </div>\n    );\n    \n}\n\nexport default CreatePlayerRace;","import React, { Component } from 'react';\nimport CreatePlayerRace from './CreatePlayerRace/CreatePlayerRace';\n\n// let pickedRace = '';\n// let pickedColor = '';\n\nclass CreatePlayer extends Component {\n\n    state = {\n        createPlayerRace: '',\n        createPlayerColor: '',\n        createPlayerName: ''\n    };\n\n    handleRaceChange = (e) => {\n        this.setState({ createPlayerRace: e.target.getAttribute('datarace') })\n    }\n\n    handleColorChange = (e) => {\n        this.setState({ createPlayerColor: e.target.getAttribute('datacolor') })\n    }\n\n    handleNameChange = (e) => {\n        this.setState({ createPlayerName: e.target.value })\n    }\n\n    handleSubmit = (e) => {\n\n        e.preventDefault();\n        \n        this.props.addPlayer(\n            this.props.races[this.state.createPlayerRace].name,\n            this.state.createPlayerRace,\n            this.props.colors[this.state.createPlayerColor].name,\n            this.state.createPlayerColor,\n            this.state.createPlayerName\n        );\n        \n        this.props.pickedRace(this.state.createPlayerRace, true)\n        this.props.pickedColor(this.state.createPlayerColor, true)\n\n        this.props.handleModal('create-player', false);\n\n        e.target.reset();\n        this.setState({ createPlayerName: ''});\n    }\n\n    render() {\n        \n        return (\n            <form onSubmit={this.handleSubmit}>\n    \n                <div className=\"create-player__thumbnails form__field-group\">\n    \n                    <div className=\"create-player__race form__field\" onChange={this.handleRaceChange}>\n                        <div className=\"grid-row\">\n                            {this.props.races.map( (race, index) => (\n                                <CreatePlayerRace\n                                    key={index}\n                                    id={race.id}\n                                    name={race.name}\n                                    pickedRace={race.picked}\n                                />\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"create-player__color form__field\" onChange={this.handleColorChange}>\n                        <div className=\"grid-row\">\n                            {this.props.colors.map( (color, index) => (\n                                <div className=\"form__field-option\" key={color.id}>\n                                    <input type=\"radio\" id={\"create-player-color-\" + color.name} name=\"create-player-color\" value={ color.name } datacolor={color.id} disabled={color.picked}/>\n                                    <label htmlFor={\"create-player-color-\" + color.name}>\n                                    <svg viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clipPath=\"url(#clip0)\"><path d=\"M90.665 35.387c0-4.35 2.948-7.815 2.566-8.189-.381-.374-3.087.442-5.064.068-1.942-.374-11.239-3.704-13.424-3.466-2.186.238-2.498 1.19-4.51 1.563-2.046.374-5.273-.442-7.25 0-1.942.442-1.595 1.19-3.087 1.563-1.492.374-1.734 0-3.226 0s-3.677.68-3.677.68v-1.088c0-.645.208-1.257.555-1.767l1.353-2.922c.173-.272.277-.544.277-.883v-3.534a.616.616 0 0 0-.624-.612h-.971a.616.616 0 0 0-.625.612v2.752c0 .612-.52 1.121-1.144 1.121H47.72c-.624 0-1.144-.51-1.144-1.12v-2.753a.616.616 0 0 0-.625-.612h-.971a.616.616 0 0 0-.624.612v3.466c0 .305.104.611.277.883l1.353 2.922c.347.51.555 1.156.555 1.768v42.68h-.45c-.66 0-1.215.509-1.215 1.189v3.907l-.59-.51c-.381-.305-.936-.271-1.214.136l-3.642 4.792h-1.943c-.485-.238-1.075-.374-1.734-.374-1.353 0-2.463.578-2.74 1.36a3.86 3.86 0 0 0-.902-.103c-1.527 0-2.775.748-2.775 1.7v.101a3.854 3.854 0 0 0-.902-.102c-3.47 0-3.33 2.956-3.33 2.956v.544s-.104 2.719-2.429 4.927l-.069.068-.035.034a3.28 3.28 0 0 0-.97 2.345c0 1.903 6.729 8.665 28.131 8.665 21.403 0 28.133-6.762 28.133-8.665 0-.918-.347-1.733-.972-2.345l-.034-.034-.07-.068c-2.359-2.208-2.428-4.927-2.428-4.927v-.544s.173-2.956-3.33-2.956c-.312 0-.624.034-.902.102v-.102c0-.951-1.249-1.699-2.775-1.699a3.86 3.86 0 0 0-.902.102c-.277-.781-1.387-1.36-2.74-1.36-.66 0-1.249.137-1.735.375h-1.942l-3.608-4.825c-.277-.374-.867-.442-1.214-.136l-.59.51v-3.909c0-.645-.52-1.189-1.214-1.189h-.45V56.32s7.076-5.097 9.92-5.097c2.845 0 6.313 3.772 9.574 3.772 3.226 0 4.232-2.888 8.88-2.888 4.683 0 11.517 6.626 12.21 6.626.694 0 .694-2.14 1.804-3.534 1.145-1.427 3.018-2.073 3.018-2.073.035-1.325-7.7-9.548-7.7-17.738z\" fill=\"#000\"></path></g><defs><clipPath id=\"clip0\"><path fill=\"#fff\" transform=\"translate(21.6 16.8)\" d=\"M0 0h76.8v84H0z\"></path></clipPath></defs></svg>\n                                        <span>{ color.name }</span>\n                                    </label>\n                                </div>\n                            ))}\n                        </div>\n                    </div> \n\n                </div>\n                    \n                <div className=\"create-player__fields form__field-group\">\n\n                    <div className=\"create-player__name form__field\">\n                        {/* <label htmlFor=\"create-player-name\">Player Name</label> */}\n                        <input id=\"create-player-name\" type=\"text\" placeholder=\"Enter player name\" value={this.state.createPlayerName} onChange={this.handleNameChange} />\n                    </div>\n\n                    <div className=\"form__field\">\n                        <button type=\"submit\" className=\"primary-button button-lg\">Create player</button>\n                    </div>\n\n                </div>\n\n            </form>\n        );\n    }\n}\n\nexport default CreatePlayer;","import React from 'react';\n\nconst ScorePlayer = (props) => {\n\n    let index = props.index\n\n    return (\n        <div className={`card player__card player--${ props.color }`}>\n            <div className=\"player__image\"></div>\n            <div className=\"player__info\">\n                <h2>{ props.name }</h2>\n                <p>{ props.race }</p>\n                <div className=\"player__score-controls\">\n                    <button className=\"button-md neutral-dark-button\" onClick={ () => props.changeScore(index, -1) }>-</button>\n                    <p className=\"player__score\">{ props.score }</p>\n                    <button className=\"button-md neutral-dark-button\" onClick={ () => props.changeScore(index, +1) }>+</button>  \n                </div>\n            </div>  \n        </div>\n    );\n    \n}\n\nexport default ScorePlayer;","import React, { Component } from 'react';\nimport ScorePlayer from './ScorePlayer/ScorePlayer';\n\nclass ScoreContainer extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"score\">\n                <div className=\"score__player-list\">\n                    {this.props.players.map( (player, index) => (\n\t\t\t\t\t\t<ScorePlayer\n                            key={player.id}\n                            id={player.id}\n                            name={player.name}\n                            race={player.race}\n                            color={player.color}\n                            score={player.score}\n                            index={index}\n                            changeScore={this.props.changeScore} \n                        />\n                    ))}\n                </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ScoreContainer;","import React, { Component } from 'react';\n\nclass RoundContainer extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"round\">\n\t\t\t\t<div className=\"strategies flex-row\">\n\t\t\t\t\t{this.props.strategies.map(strategy => (\n\t\t\t\t\t\t<div className={\"card card--\" + strategy.color} key={strategy.id}>\n\t\t\t\t\t\t\t<h2>{ strategy.name }</h2>\n\t\t\t\t\t\t\t<div className=\"strategy__players\">\n\t\t\t\t\t\t\t{this.props.players.map(player => (\n\t\t\t\t\t\t\t\t<button type=\"button\" class={\"button-md button--\" + strategy.color}>{ player.name }</button>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default RoundContainer;","import React, { Component } from 'react';\n\nclass AgendaContainer extends Component {\n\n\trender() {\n\t\treturn ( \n            <div>\n                <p>Agenda helper to go here.</p>\n            </div>\n\t\t);\n\t}\n}\n\nexport default AgendaContainer;","import React, { Component } from 'react';\n// import {\n//     BrowserRouter,\n//     Route,\n//     Redirect\n// } from 'react-router-dom';\n\nimport Navigation from './../Navigation/Navigation';\nimport RulesContainer from './../Rules/RulesContainer';\n\nimport PlayerContainer from './../Players/PlayerContainer';\nimport CreatePlayer from './../Players/CreatePlayer/CreatePlayer';\n\nimport ScoreContainer from './../Score/ScoreContainer';\n\nimport RoundContainer from './../Round/RoundContainer';\n\nimport AgendaContainer from './../Agenda/AgendaContainer';\n\n// import SettingsContainer from './../Settings/SettingsContainer';\n\n\n\nconst createId = () => {\n    return Math.random().toString(16).slice(-6); // for random id, aplha-numeric\n};\n\nclass Race {\n    constructor( name, portrait, thumbnail ) {\n        this.id = createId();\n        this.name = name;\n        this.race = portrait;\n        this.color = thumbnail;\n    }\n}\nnew Race('The Embers of Muaat', 'tbd', 'tbd');\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            players: [\n                {\n                    id: createId(),\n                    key: createId(),\n                    name: 'Aaron',\n                    race: 'The Embers of Muaat',\n                    raceId: '3',\n                    color: 'yellow',\n                    colorId: '5',\n                    score: 0\n                },\n                {\n                    id: createId(),\n                    key: createId(),\n                    name: 'Adam',\n                    race: 'The Emirates of Hacan',\n                    raceId: '4',\n                    color: 'red',\n                    colorId: '4',\n                    score: 0\n                },\n                {\n                    id: createId(),\n                    key: createId(),\n                    name: 'Jordan',\n                    race: 'The Yssaril Tribes',\n                    raceId: '16',\n                    color: 'blue',\n                    colorId: '1',\n                    score: 0\n                }\n            ],\n            strategies: [\n                {\n                    id: 1,\n                    name: 'Leadership',\n                    primary: '<li>Gain 3 command tokens.</li><li>Spend any amount of influence to gain 1 command token for every 3 influence spent.</li>',\n                    secondary: '<li>Spend any amount of influence to gain 1 command token for every 3 influence spent.</li>',\n                    tip: 'A player might choose this card to gain more command tokens, enabling him to perform more actions during the action phase.',\n                    color: 'red'\n                },\n                {\n                    id: 2,\n                    name: 'Diplomacy',\n                    primary: '<li>Choose 1 system other than the Mecatol Rex system that contains a plant you control; Each other player places a command token from his reinforcements in the chosen system. Then ready each exhausted planet you control in that system.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool to ready up to 2 exhausted planets.</li>',\n                    tip: 'A player might choose this card if he feels threatened, to prevent other players from attacking his system.',\n                    color: 'orange'\n                },\n                {\n                    id: 3,\n                    name: 'Politics',\n                    primary: '<li>Choose a player other than the speaker. That player gains the speaker token.</li><li>Draw 2 action cards.</li><li>Look at the top 2 cards of the agenda deck. Place each card on the top or bottom of the deck in any order.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool to draw 2 action cards.</li>',\n                    tip: 'A player might choose this card to draw action cards, increasing the variety of abilities that are available to him.',\n                    color: 'yellow'\n                },\n                {\n                    id: 4,\n                    name: 'Construction',\n                    primary: '<li>Place 1 PDS or 1 space dock on a planet you control.</li><li>Place 1 PDS on a planet you control.</li>',\n                    secondary: '<li>Place 1 token from your strategy pool in any system; you may palce either 1 space dock or 1 PDS on a planet you control in that system.</li>',\n                    tip: 'A player might choose this card to produce planetary structures, such as space docks, and PDF units.',\n                    color: 'green'\n                },\n                {\n                    id: 5,\n                    name: 'Trade',\n                    primary: '<li>Gain 3 trade goods.</li><li>Replenish commodities.</li><li>Choose any number of other players. Those players use the secondary ability.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool to replenish commodities.</li>',\n                    tip: 'A player might choose this card to gain trade goods and commodities, which he could use to produce additional units or trade to other players.',\n                    color: 'teal'\n                },\n                {\n                    id: 6,\n                    name: 'Warfare',\n                    primary: '<li>Remove 1 of your command tokens from the game board; then, gain 1 command token.</li><li>Redistribute any number of the command tokens on your command sheet.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool to use the PRODUCTION ability of 1 of your space docks in your home system.</li>',\n                    tip: 'A player might choose this card to allow some of his ships to move twive, or to build a unit and move it during the same game round.',\n                    color: 'blue'\n                },\n                {\n                    id: 7,\n                    name: 'Technology',\n                    primary: '<li>Research 1 technology.</li><li>Spend 6 resources to research 1 technology.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool and 4 resources to research 1 technology.</li>',\n                    tip: 'A player might choose this card to research a new technolgoy that would grant him a new ability or unit upgrade.',\n                    color: 'navy'\n                },\n                {\n                    id: 8,\n                    name: 'Imperial',\n                    primary: '<li>Immediately score 1 public objective if you fulfill its requirements.</li><li>Gain 1 victory card if you control Mecatol Rex; otherwise, draw 1 secret objective.</li>',\n                    secondary: '<li>Spend 1 token from your strategy pool to draw 1 secret objective.</li>',\n                    tip: 'A player might choose this card to draw an additional secret objective, granting him additional routes to victory.',\n                    color: 'purple'\n                },\n            ],\n            races: [\n                {\n                    id: 0,\n                    name: 'The Arborec',\n                    picked: false,\n                },\n                {\n                    id: 1,\n                    name: 'The Barony of Letnev',\n                    picked: false,\n                },\n                {\n                    id: 2,\n                    name: 'The Clan of Saar',\n                    picked: false,\n                },\n                {\n                    id: 3,\n                    name: 'The Embers of Muaat',\n                    picked: true,\n                },\n                {\n                    id: 4,\n                    name: 'The Emirates of Hacan',\n                    picked: true,\n                },\n                {\n                    id: 5,\n                    name: 'The Federation of Sol',\n                    picked: false,\n                },\n                {\n                    id: 6,\n                    name: 'The Ghosts of Creuss',\n                    picked: false,\n                },\n                {\n                    id: 7,\n                    name: 'The L1Z1X Mindnet',\n                    picked: false,\n                },\n                {\n                    id: 8,\n                    name: 'The Mentak Coalition',\n                    picked: false,\n                },\n                {\n                    id: 9,\n                    name: 'The Naalu Collective',\n                    picked: false,\n                },\n                {\n                    id: 10,\n                    name: 'The Nekro Virus',\n                    picked: false,\n                },\n                {\n                    id: 11,\n                    name: \"The Sardakk N'orr\",\n                    picked: false,\n                },\n                {\n                    id: 12,\n                    name: 'The Universities of Jol-nar',\n                    picked: false,\n                },\n                {\n                    id: 13,\n                    name: 'The Winnu',\n                    picked: false,\n                },\n                {\n                    id: 14,\n                    name: 'The Xxcha Kingdom',\n                    picked: false,\n                },\n                {\n                    id: 15,\n                    name: 'The Yin Brotherhood',\n                    picked: false,\n                },\n                {\n                    id: 16,\n                    name: 'The Yssaril Tribes',\n                    picked: true,\n                },\n            ],\n            colors: [\n                {\n                    id: 0,\n                    name: 'black',\n                    picked: false\n                },\n                {\n                    id: 1,\n                    name: 'blue',\n                    picked: false\n                },\n                {\n                    id: 2,\n                    name: 'green',\n                    picked: false\n                },\n                {\n                    id: 3,\n                    name: 'purple',\n                    picked: false\n                },\n                {\n                    id: 4,\n                    name: 'red',\n                    picked: false\n                },\n                {\n                    id: 5,\n                    name: 'yellow',\n                    picked: false\n                }\n            ],\n            // showCreatePlayerModal: false\n        };\n    }\n\n    handleAddPlayer = (race, raceId, color, colorId, name) => {\n        this.setState({\n            players: [\n                ...this.state.players,\n                {\n                    id: createId(),\n                    key: createId(),\n                    name,\n                    race,\n                    raceId,\n                    color,\n                    colorId,\n                    score: 0\n                }\n            ]\n        });\n    }\n\n    handleRemovePlayer = (id) => {\n        \n        let pickedColor = this.state.players.find( c => c.id === id ).colorId;\n        let pickedRace = this.state.players.find( d => d.id === id ).raceId;\n\n        // Set color object to unpicked\n        this.setState( (prevState) => {\n            return {\n                ...prevState.colors[pickedColor].picked = false,\n                ...prevState.races[pickedRace].picked = false,\n                players: prevState.players.filter( p => p.id !== id ),\n            }\n        });\n    }\n\n    handleScoreChange = (index, delta) => {\n        this.setState( (prevState) => {\n            return {\n                score: prevState.players[index].score += delta\n            }\n        });\n    }\n\n    handlePickedRace = (id, state) => {\n        this.setState( (prevState) => {\n            return {\n                ...prevState.races[id].picked = state\n            }\n        });\n    }\n\n    handlePickedColor = (id, state) => {\n        this.setState( (prevState) => {\n            return {\n                ...prevState.colors[id].picked = state\n            }\n        });\n    }\n\n    handleShowModal = (modal, state) => {\n        console.log(modal, state);\n        const modalContainer = document.querySelector('.modal-container');\n        const selectedModal = document.querySelector('.modal__' + modal);\n        const modals = document.querySelectorAll('.modal');\n        if ( state === true ) {\n            modalContainer.classList.add('modal--show');\n            selectedModal.classList.add('modal--show');\n        } else {\n            modalContainer.classList.remove('modal--show');\n            modals.forEach(modal => {\n                modal.classList.remove('modal--show');\n            });\n        }\n    }\n\n\trender() {\n\t\treturn (\n            <div className=\"app\">\n                <Navigation />\n                <div id=\"view-container\" className=\"view-container\">\n\n                    <div className=\"view view__players\">\n                        {/* <ScoreContainer /> */}\n                        <h1>Setup</h1>\n                        <PlayerContainer\n                            players={this.state.players}\n                            races={this.state.races}\n                            pickedRace={this.handlePickedRace}\n                            colors={this.state.colors}\n                            pickedColor={this.handlePickedColor}\n                            changeScore={this.handleScoreChange}\n                            addPlayer={this.handleAddPlayer}\n                            removePlayer={this.handleRemovePlayer} \n                            handleModal={this.handleShowModal}\n                        />\n                    </div>\n\n                    <div className=\"view view__score\">\n                        <h1>Score</h1>\n                        <ScoreContainer\n                            players={this.state.players}\n                            changeScore={this.handleScoreChange}\n                        />\n                    </div>\n\n                    <div className=\"view view__game\">\n                        <h1>Round</h1>\n                        <RoundContainer\n                            players={this.state.players}\n                            strategies={this.state.strategies}\n                        />\n                    </div>\n\n                    <div className=\"view view__agenda\">\n                        <h1>Agenda</h1>\n                        <AgendaContainer />\n                    </div>\n\n                    <div className=\"view view__rules\">\n                        <h1>Rules</h1>\n                        <RulesContainer />\n                    </div>\n\n                    {/* <div className=\"view view__settings\">\n                        <h1>Settings</h1>\n                        <SettingsContainer />\n                    </div> */}\n\n                </div>\n                <div className=\"modal-container\">\n                    <div className=\"modal modal__create-player players__create-player card\">\n                        <button className=\"modal__close-btn\" onClick={ () => this.handleShowModal('create-player', false) }>\n                            <svg xlinkHref=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\n                        </button>\n                        <h2>Create player</h2>\n                        <CreatePlayer\n                            addPlayer={this.handleAddPlayer}\n                            races={this.state.races}\n                            pickedRace={this.handlePickedRace}\n                            colors={this.state.colors}\n                            pickedColor={this.handlePickedColor}\n                            handleModal={this.handleShowModal}\n                        />\n                    </div>\n                </div>\n            </div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}